// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XeynergyAPI.Contexts;

#nullable disable

namespace XeynergyAPI.Migrations
{
    [DbContext(typeof(PersonContext))]
    [Migration("20220313145253_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("XeynergyAPI.Models.AccessRule", b =>
                {
                    b.Property<int>("AccessRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessRuleId"), 1L, 1);

                    b.Property<bool>("Permission")
                        .HasColumnType("bit");

                    b.Property<string>("RuleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccessRuleId");

                    b.ToTable("AccessRule");
                });

            modelBuilder.Entity("XeynergyAPI.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"), 1L, 1);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("XeynergyAPI.Models.UserGroup", b =>
                {
                    b.Property<int>("UserGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserGroupId"), 1L, 1);

                    b.Property<int>("AccessRuleRefId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserGroupId");

                    b.HasIndex("AccessRuleRefId");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("XeynergyAPI.Models.Admin", b =>
                {
                    b.HasBaseType("XeynergyAPI.Models.Person");

                    b.Property<string>("Privilege")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("XeynergyAPI.Models.User", b =>
                {
                    b.HasBaseType("XeynergyAPI.Models.Person");

                    b.Property<int>("AttachedCustomerId")
                        .HasColumnType("int");

                    b.Property<int>("UserGroupRefId")
                        .HasColumnType("int");

                    b.HasIndex("UserGroupRefId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("XeynergyAPI.Models.UserGroup", b =>
                {
                    b.HasOne("XeynergyAPI.Models.AccessRule", "AccessRule")
                        .WithMany()
                        .HasForeignKey("AccessRuleRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessRule");
                });

            modelBuilder.Entity("XeynergyAPI.Models.Admin", b =>
                {
                    b.HasOne("XeynergyAPI.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("XeynergyAPI.Models.Admin", "PersonId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("XeynergyAPI.Models.User", b =>
                {
                    b.HasOne("XeynergyAPI.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("XeynergyAPI.Models.User", "PersonId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("XeynergyAPI.Models.UserGroup", "UserGroup")
                        .WithMany()
                        .HasForeignKey("UserGroupRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
